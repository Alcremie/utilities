function e(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)}var t,n;class Snowflake{constructor(e){t.set(this,0n),n.set(this,void 0),Object.defineProperty(this,"decode",{enumerable:!0,configurable:!0,writable:!0,value:this.deconstruct}),function(e,t,n){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");t.set(e,n)}(this,n,BigInt(e))}generate({increment:r=e(this,t),timestamp:o=Date.now(),workerID:a=1n,processID:i=1n}={increment:e(this,t),timestamp:Date.now(),workerID:1n,processID:1n}){if(o instanceof Date&&(o=BigInt(o)),"number"!=typeof o||Number.isNaN(o)||(o=BigInt(o)),"bigint"!=typeof o)throw new TypeError(`"timestamp" argument must be a number, BigInt or Date (received ${Number.isNaN(o)?"NaN":typeof o})`);return r>=4095n&&(r=0n),o-e(this,n)<<22n|a<<17n|i<<12n|r++}deconstruct(t){const r=BigInt(t);return{id:r,timestamp:(r>>22n)+e(this,n),workerID:r>>17n&31n,processID:r>>12n&31n,increment:4095n&r,epoch:e(this,n)}}}t=new WeakMap,n=new WeakMap;class DiscordSnowflake extends Snowflake{constructor(){super(DiscordSnowflake.Epoch)}static deconstruct(e){return(new DiscordSnowflake).deconstruct(e)}static generate(e={timestamp:Date.now()}){return(new DiscordSnowflake).generate(e)}}Object.defineProperty(DiscordSnowflake,"Epoch",{enumerable:!0,configurable:!0,writable:!0,value:1420070400000n}),Object.defineProperty(DiscordSnowflake,"decode",{enumerable:!0,configurable:!0,writable:!0,value:DiscordSnowflake.deconstruct});class TwitterSnowflake extends Snowflake{constructor(){super(TwitterSnowflake.Epoch)}static deconstruct(e){return(new TwitterSnowflake).deconstruct(e)}static generate(e={timestamp:Date.now()}){return(new TwitterSnowflake).generate(e)}}Object.defineProperty(TwitterSnowflake,"Epoch",{enumerable:!0,configurable:!0,writable:!0,value:1142974214000n}),Object.defineProperty(TwitterSnowflake,"decode",{enumerable:!0,configurable:!0,writable:!0,value:TwitterSnowflake.deconstruct});export{DiscordSnowflake,Snowflake,TwitterSnowflake};
//# sourceMappingURL=index.mjs.map
