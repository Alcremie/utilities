{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["const { getPromiseDetails, getProxyDetails } =\n\ttypeof process === 'undefined'\n\t\t? {\n\t\t\t\tgetPromiseDetails: () => undefined,\n\t\t\t\tgetProxyDetails: () => undefined\n\t\t  }\n\t\t: // @ts-ignore process.binding exists\n\t\t  process.binding('util');\n\n/**\n * The class for deep checking Types\n */\nexport class Type {\n\t/**\n\t * The value to generate a deep Type of\n\t */\n\tpublic readonly value: unknown;\n\n\t/**\n\t * The shallow type of this\n\t */\n\tpublic is: string;\n\n\t/**\n\t * The parent of this Type\n\t */\n\tprivate readonly parent: Type | null;\n\n\t/**\n\t * The child keys of this Type\n\t */\n\tprivate readonly childKeys = new Map<string, Type>();\n\n\t/**\n\t * The child values of this Type\n\t */\n\tprivate readonly childValues = new Map<string, Type>();\n\n\t/**\n\t * @param value The value to generate a deep Type of\n\t * @param parent The parent value used in recursion\n\t */\n\tpublic constructor(value: unknown, parent: Type | null = null) {\n\t\tthis.value = value;\n\t\tthis.is = Type.resolve(value);\n\t\tthis.parent = parent;\n\t}\n\n\t/**\n\t * The type string for the children of this Type\n\t */\n\tprivate get childTypes(): string {\n\t\tif (!this.childValues.size) return '';\n\t\treturn `<${(this.childKeys.size ? `${Type.list(this.childKeys)}, ` : '') + Type.list(this.childValues)}>`;\n\t}\n\n\t/**\n\t * The full type string generated.\n\t */\n\tpublic toString(): string {\n\t\tthis.check();\n\t\treturn `${this.is}${this.childTypes}`;\n\t}\n\n\t/**\n\t * Walks the linked list backwards, for checking circulars.\n\t */\n\tprivate *parents(): Generator<Type, void, unknown> {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias, no-cond-assign, consistent-this\n\t\tlet current: Type | null = this;\n\t\t// eslint-disable-next-line no-cond-assign\n\t\twhile ((current = current.parent)) yield current;\n\t}\n\n\t/**\n\t * Checks if the value of this Type is a circular reference to any parent.\n\t */\n\tprivate isCircular(): boolean {\n\t\tfor (const parent of this.parents()) if (parent.value === this.value) return true;\n\t\treturn false;\n\t}\n\n\t/**\n\t * The subtype to create based on this.value's sub value.\n\t * @param value The sub value\n\t */\n\tprivate addValue(value: unknown): void {\n\t\tconst child = new Type(value, this);\n\t\tthis.childValues.set(child.is, child);\n\t}\n\n\t/**\n\t * The subtype to create based on this.value's entries.\n\t * @param entry The entry\n\t */\n\tprivate addEntry([key, value]: [string, unknown]): void {\n\t\tconst child = new Type(key, this);\n\t\tthis.childKeys.set(child.is, child);\n\t\tthis.addValue(value);\n\t}\n\n\t/**\n\t * Get the deep type name that defines the input.\n\t */\n\tprivate check(): void {\n\t\tif (Object.isFrozen(this)) return;\n\n\t\tconst promise = getPromiseDetails(this.value);\n\t\tconst proxy = getProxyDetails(this.value);\n\t\tif (typeof this.value === 'object' && this.isCircular()) {\n\t\t\tthis.is = `[Circular:${this.is}]`;\n\t\t} else if (promise && promise[0]) {\n\t\t\tthis.addValue(promise[1]);\n\t\t} else if (proxy && proxy[0]) {\n\t\t\tthis.is = 'Proxy';\n\t\t\tthis.addValue(proxy[0]);\n\t\t} else if (this.value instanceof Map) {\n\t\t\tfor (const entry of this.value) this.addEntry(entry);\n\t\t} else if (Array.isArray(this.value) || this.value instanceof Set) {\n\t\t\tfor (const value of this.value) this.addValue(value);\n\t\t} else if (this.is === 'Object') {\n\t\t\tthis.is = 'Record';\n\t\t\tfor (const entry of Object.entries(this.value as Record<PropertyKey, unknown>)) this.addEntry(entry);\n\t\t}\n\n\t\tObject.freeze(this);\n\t}\n\n\t/**\n\t * Resolves the type name that defines the input.\n\t * @param value The value to get the type name of\n\t */\n\tpublic static resolve(value: any): string {\n\t\tconst type = typeof value;\n\t\tswitch (type) {\n\t\t\tcase 'object':\n\t\t\t\treturn value === null ? 'null' : value.constructor && value.constructor.name;\n\t\t\tcase 'function':\n\t\t\t\treturn `${value.constructor.name}(${value.length}-arity)`;\n\t\t\tcase 'undefined':\n\t\t\t\treturn 'void';\n\t\t\tdefault:\n\t\t\t\treturn type;\n\t\t}\n\t}\n\n\t/**\n\t * Joins the list of child types.\n\t * @param values The values to list\n\t */\n\tprivate static list(values: Map<string, Type>): string {\n\t\treturn [...values.values()].sort().join(' | ');\n\t}\n}\n"],"names":["getPromiseDetails","getProxyDetails","process","binding","Type","[object Object]","value","parent","Object","Map","this","is","resolve","childTypes","childValues","size","childKeys","list","check","current","parents","child","set","key","addValue","isFrozen","promise","proxy","isCircular","entry","addEntry","Array","isArray","Set","entries","freeze","type","constructor","name","length","values","sort","join"],"mappings":"oEAAA,MAAMA,kBAAEA,EAAiBC,gBAAEA,GACP,oBAAZC,QACJ,CACAF,kBAAmB,OACnBC,gBAAiB,QAGjBC,QAAQC,QAAQ,cAKPC,EA8BZC,YAAmBC,EAAgBC,EAAsB,MA1BzDC,6FAKAA,0FAKAA,8FAKAA,wFAA6B,IAAIC,MAKjCD,0FAA+B,IAAIC,MAOlCC,KAAKJ,MAAQA,EACbI,KAAKC,GAAKP,EAAKQ,QAAQN,GACvBI,KAAKH,OAASA,EAMfM,iBACC,OAAKH,KAAKI,YAAYC,KACf,KAAKL,KAAKM,UAAUD,KAAUX,EAAKa,KAAKP,KAAKM,WAAlB,KAAmC,IAAMZ,EAAKa,KAAKP,KAAKI,gBADvD,GAO7BT,WAEN,OADAK,KAAKQ,QACE,GAAGR,KAAKC,KAAKD,KAAKG,aAMlBR,WAEP,IAAIc,EAAuBT,KAE3B,KAAQS,EAAUA,EAAQZ,cAAeY,EAMlCd,aACP,IAAK,MAAME,KAAUG,KAAKU,UAAW,GAAIb,EAAOD,QAAUI,KAAKJ,MAAO,OAAO,EAC7E,OAAO,EAOAD,SAASC,GAChB,MAAMe,EAAQ,IAAIjB,EAAKE,EAAOI,MAC9BA,KAAKI,YAAYQ,IAAID,EAAMV,GAAIU,GAOxBhB,UAAUkB,EAAKjB,IACtB,MAAMe,EAAQ,IAAIjB,EAAKmB,EAAKb,MAC5BA,KAAKM,UAAUM,IAAID,EAAMV,GAAIU,GAC7BX,KAAKc,SAASlB,GAMPD,QACP,GAAIG,OAAOiB,SAASf,MAAO,OAE3B,MAAMgB,EAAU1B,EAAkBU,KAAKJ,OACjCqB,EAAQ1B,EAAgBS,KAAKJ,OACnC,GAA0B,iBAAfI,KAAKJ,OAAsBI,KAAKkB,aAC1ClB,KAAKC,GAAK,aAAaD,KAAKC,WACtB,GAAIe,GAAWA,EAAQ,GAC7BhB,KAAKc,SAASE,EAAQ,SAChB,GAAIC,GAASA,EAAM,GACzBjB,KAAKC,GAAK,QACVD,KAAKc,SAASG,EAAM,SACd,GAAIjB,KAAKJ,iBAAiBG,IAChC,IAAK,MAAMoB,KAASnB,KAAKJ,MAAOI,KAAKoB,SAASD,QACxC,GAAIE,MAAMC,QAAQtB,KAAKJ,QAAUI,KAAKJ,iBAAiB2B,IAC7D,IAAK,MAAM3B,KAASI,KAAKJ,MAAOI,KAAKc,SAASlB,QACxC,GAAgB,WAAZI,KAAKC,GAAiB,CAChCD,KAAKC,GAAK,SACV,IAAK,MAAMkB,KAASrB,OAAO0B,QAAQxB,KAAKJ,OAAwCI,KAAKoB,SAASD,GAG/FrB,OAAO2B,OAAOzB,MAORL,eAAeC,GACrB,MAAM8B,SAAc9B,EACpB,OAAQ8B,GACP,IAAK,SACJ,OAAiB,OAAV9B,EAAiB,OAASA,EAAM+B,aAAe/B,EAAM+B,YAAYC,KACzE,IAAK,WACJ,MAAO,GAAGhC,EAAM+B,YAAYC,QAAQhC,EAAMiC,gBAC3C,IAAK,YACJ,MAAO,OACR,QACC,OAAOH,GAQF/B,YAAYmC,GACnB,MAAO,IAAIA,EAAOA,UAAUC,OAAOC,KAAK"}